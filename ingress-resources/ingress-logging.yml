
apiVersion: networking.k8s.io/v1
kind: Ingress 
metadata: 
  name: logging-ingress
  namespace: logging
  annotations: 
    alb.ingress.kubernetes.io/target-type: 'ip'
    # kubernetes.io/ingress.class: my-aws-ingress-class  
    alb.ingress.kubernetes.io/load-balancer-name: ingress-ssl-gateway
    alb.ingress.kubernetes.io/scheme: internet-facing 
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/793a6154-8a24-449d-aed5-9257e19f5c92
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/8409e5b2-ddb2-4249-8f39-8d8a931a585f
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/0794d684-6a4c-46ba-9989-11d434dc16df
    external-dns.alpha.kubernetes.io/hostname: elasticsearch.k8s.magiclab396.com,logstash.k8s.magiclab396.com,kibana.k8s.magiclab396.com
    alb.ingress.kubernetes.io/group.name: myapps.web
    alb.ingress.kubernetes.io/group.order: '80'
spec:
  ingressClassName: my-aws-ingress-class
  rules:
  - host: "elasticsearch.k8s.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: elasticsearch-master
            port: 
              number: 9200
        path: /
        pathType: Prefix
  - host: "logstash.k8s.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: elk-logstash-logstash
            port: 
              number: 8080
        path: /
        pathType: Prefix
  - host: "kibana.k8s.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: elk-kibana-kibana
            port: 
              number: 5601
        path: /
        pathType: Prefix
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress 
# metadata: 
#   name: prometheus-ingress
#   namespace: monitoring
#   annotations: 
#     alb.ingress.kubernetes.io/target-type: 'ip'
#     # kubernetes.io/ingress.class: my-aws-ingress-class  
#     alb.ingress.kubernetes.io/load-balancer-name: ingress-ssl-gateway
#     alb.ingress.kubernetes.io/scheme: internet-facing 
#     alb.ingress.kubernetes.io/healthcheck-path: /api/health
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     # alb.ingress.kubernetes.io/backend-protocol: HTTPS
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#     alb.ingress.kubernetes.io/ssl-redirect: '443'
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/793a6154-8a24-449d-aed5-9257e19f5c92
#     external-dns.alpha.kubernetes.io/hostname: prometheus.k8s.magiclab396.com
#     alb.ingress.kubernetes.io/group.name: myapps.web
#     alb.ingress.kubernetes.io/group.order: '40'
# spec:
#   ingressClassName: my-aws-ingress-class
#   rules:
#   - host: "prometheus.k8s.magiclab396.com"
#     http:
#       paths:      
#       - backend:
#           service:
#             name: kube-prometheus-stack-prometheus
#             port: 
#               number: 9090
#         path: /
#         pathType: Prefix