# kind: Service
# apiVersion: v1
# metadata:
#   name: monitoring-grafana
#   namespace: istio-system
#   annotations:
#     alb.ingress.kubernetes.io/healthcheck-path: /api/health
# spec:
#   type: ExternalName
#   externalName: kube-prometheus-stack-grafana.monitoring.svc.cluster.local
#   ports:
#   - port: 80
#     targetPort: 80
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: argocd
#   namespace: istio-system
#   annotations:
#     # alb.ingress.kubernetes.io/target-type: 'ip'
#     alb.ingress.kubernetes.io/healthcheck-path: /api/health
# spec:
#   type: ExternalName
#   externalName: argo-cd-argocd-server.argocd.svc.cluster.local
#   ports:
#   - port: 80
#     targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress 
metadata: 
  name: istio-ingress
  namespace: istio-system
  annotations: 
    # alb.ingress.kubernetes.io/target-type: 'ip'
    # kubernetes.io/ingress.class: my-aws-ingress-class  
    alb.ingress.kubernetes.io/load-balancer-name: ingress-ssl-gateway
    alb.ingress.kubernetes.io/scheme: internet-facing 
    alb.ingress.kubernetes.io/healthcheck-path: /healthz/ready
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect", 
        "RedirectConfig": { 
          "Protocol": "HTTPS", 
          "Port": "443", 
          "StatusCode": "HTTP_301"
        }
      }
    # alb.ingress.kubernetes.io/ssl-redirect: '443'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/793a6154-8a24-449d-aed5-9257e19f5c92
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/8409e5b2-ddb2-4249-8f39-8d8a931a585f
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/0794d684-6a4c-46ba-9989-11d434dc16df
    external-dns.alpha.kubernetes.io/hostname: openim.k8s.magiclab396.com,openim-gateway.k8s.magiclab396.com,chat-openim.k8s.magiclab396.com
    alb.ingress.kubernetes.io/group.name: myapps.web
    alb.ingress.kubernetes.io/group.order: '10'
spec:
  ingressClassName: my-aws-ingress-class
  rules:
  - host: "openim.k8s.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: ssl-redirect
            port: 
              name: use-annotation
        path: /    
        pathType: Prefix  
      - backend:
          service:
            name: istio-ingressgateway
            port: 
              number: 15021
        path: /healthz/ready
        pathType: Prefix
      - backend:
          service:
            name: istio-ingressgateway
            port: 
              number: 443
        path: /
        pathType: Prefix
  - host: "chat-openim.k8s.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: ssl-redirect
            port: 
              name: use-annotation
        path: /    
        pathType: Prefix  
      - backend:
          service:
            name: istio-ingressgateway
            port: 
              number: 15021
        path: /healthz/ready
        pathType: Prefix
      - backend:
          service:
            name: istio-ingressgateway
            port: 
              number: 443
        path: /
        pathType: Prefix
      # -  route:
  #   - destination:
  #       host: grafana.istio-system.svc.cluster.local
  #       port:
  #         number: 3000